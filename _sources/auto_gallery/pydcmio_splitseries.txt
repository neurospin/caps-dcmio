

.. _sphx_glr_auto_gallery_pydcmio_splitseries.py:


Pydcmio Splitseries
===================

Example automatically generated from package script.



.. code-block:: python



    # System import
    from __future__ import print_function
    import argparse
    import os
    import shutil

    # Bredala import
    try:
        import bredala
        bredala.USE_PROFILER = False
        bredala.register("pydcmio.dcmconverter.spliter",
                         names=["split_series"])
    except:
        pass

    # Dcmio import
    from pydcmio import __version__ as version
    from pydcmio.dcmconverter.spliter import split_series

    # Parameters to keep trace
    __hopla__ = ["tool", "version", "inputs", "outputs"]


    # Script documentation
    doc = """
    Split DICOM series
    ~~~~~~~~~~~~~~~~~~

    Split a Dicom folder files by series.
    Dicom files are searched recursively in the input folder and all files
    are expected to be Dicom files.

    Expect to split files from a single session.

    Command:

    python $HOME/git/pydcmio/pydcmio/scripts/pydcmio_splitseries \
        -v 2 \
        -i /volatile/nsap/dcm2nii/dicom \
        -o /volatile/nsap/dcm2nii/convert_dicom 
    """


    def is_directory(dirarg):
        """ Type for argparse - checks that directory exists.
        """
        if not os.path.isdir(dirarg):
            raise argparse.ArgumentError(
                "The directory '{0}' does not exist!".format(dirarg))
        return dirarg


    parser = argparse.ArgumentParser(description=doc)
    parser.add_argument(
        "-v", "--verbose", dest="verbose", type=int, choices=[0, 1, 2], default=0,
        help="increase the verbosity level: 0 silent, [1, 2] verbose.")
    parser.add_argument(
        "-i", "--indir", dest="indir", required=True, metavar="PATH",
        help="a folder that contains DICOM files only.",
        type=is_directory)
    parser.add_argument(
        "-o", "--outdir", dest="outdir", required=True, metavar="PATH",
        help="the folder that contains the generated split DICOM files.",
        type=is_directory)
    args = parser.parse_args()



Welcome message.



.. code-block:: python


    tool = "pydcmio_splitseries"
    if args.verbose > 0:
        print("[info] Start DICOM files splitting...")
        print("[info] Input: {0}.".format(args.indir))
        print("[info] Output: {0}.".format(args.outdir))
    inputs = [args.indir]
    outputs = [args.outdir]



Execute the splitting task.



.. code-block:: python


    split_series(args.indir, args.outdir)


**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: pydcmio_splitseries.py <pydcmio_splitseries.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: pydcmio_splitseries.ipynb <pydcmio_splitseries.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    Gallery generated by Sphinx-Gallery


